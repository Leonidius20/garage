# Welcome to GraphiQL
#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that starts
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)
#
#       Run Query:  Ctrl-Enter (or press the play button above)
#
#   Auto Complete:  Ctrl-Space (or just start typing)
#
query GetById {
  detailById(id: 107848){
    id
    name
    manufacturer
    type
    description

  }
}

mutation CreateDetail {
  createDetail(name: "test", manufacturer: "manufucturer", description: "", type: "transmission", price: 3000)
  {
    id
  }
}

mutation UpdateDetail {
  updateDetail(id: 107848, description: "this is a test description2" ) {
    id
    description
  }
}

mutation DeleteDetail {
  deleteDetail(id: 107849)
}

query GetFiveUsers {
  users(page: 0) {
    id
    login
  }
}

query GetUserById {
  userById(id: 2) {
    id
    login
  }
}

query GetUserByLogin {
  userByLogin(login: "another_user") {
    id
    login
  }
}


query OrderById {
  orderById(id: 3) {
    user {
      login
    }
    detail {
      name
      description
    }
    quantity
  }
}


query OrdersByUserId {
  ordersByUserId(userId: 2) {
    user {
      login
    }
    detail {
      name
      description
    }
    quantity
  }
}

mutation CreateOrder {
  createOrder(userId:2, detailId: 2, quantity: 1) {
    id
  }
}
